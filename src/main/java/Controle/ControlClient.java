package Controle;

import org.springframework.stereotype.Controller;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;

import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import Mapper.AccountClient;

import Metier.ClientOperations;


@Controller
public class ControlClient {
	
			 
		    @Autowired
		    private AccountClient Accountclient;
		 
		    @RequestMapping(value = "/man", method = RequestMethod.GET)
		    public String showAccounts(Model model) {
		        List<ClientOperations> list =Accountclient.getAccountclient();
		 
		        model.addAttribute("accountInfos", list);
		 
		        return " AfficherMenus";
		    
		    }
		    
		 
		   
		       
		 
}	
/*
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import Mapper.ClientOperationMapper;
import Metier.ClientOperations;

@Controller // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class ControlClient {
  @Autowired // This means to get the bean called userRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private ClientOperationMapper ClientOperationMapper;

  @PostMapping(path="/add") // Map ONLY POST Requests
  public @ResponseBody String addNewUser (@RequestParam String name
      , @RequestParam String email) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request

	  ClientOperations n = new ClientOperations();
    n.setName(name);
    n.setEmail(email);
    ClientOperationMapper.save(n);
    return "Saved";
  }

  @GetMapping(path="/all")
  public @ResponseBody Iterable<ClientOperations> getAllUsers() {
    // This returns a JSON or XML with the users
    return ClientOperationMapper.findAll();
  }
}*/
